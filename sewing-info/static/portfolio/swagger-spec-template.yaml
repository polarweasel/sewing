swagger: '2.0'
info:
  title: MediaFirst OSS/BSS API Template
  version: 'template 1.3'
  description: >-
    MediaFirst OSS/BSS API template. You can use these definitions as a starting point for your API.

    The [OpenAPI specification](http://swagger.io/specification/) is a useful reference while you are creating your API.

  contact:
  # Use your team name + yours here
    name: Alex Ball, MediaFirst API Review Board
  # Use your team's email alias here
    email: awball@polarweasel.org
  # URL is optional, and probably not useful in most cases
    url: https://polarweasel.org/

host: localhost
basePath: /oss

schemes:
  - https

externalDocs:
  description: External documentation links are optional, but an interesting idea.
  url: https://google.com/

tags:
  - name: API template
    description: >-
      You can describe your tag here.

      You can do it in *considerable* detail if you like, including external docs (which do not show up in the [Swagger Editor](http://editor.swagger.io/), but may in other tools).
    externalDocs:
      description: What is a template?
      url: http://google.com/?q=what+is+a+template
  - name: API v1
    description: We may want to think about tagging by functional areas, instead, like "Account management" and "Metadata".
  - name: Deprecated
    description: >-
      Items marked *Deprecated* will be removed at a later date, no less than 4 releases (8 sprints) from the announcement of their deprecation. The announcement and removal releases are noted in the item's description. Current deprecations are documented (for internal use) on a [Confluence page](https://conf-fe-p01.mr.ericsson.se:8443/display/EN/API+Deprecations).

#--START HERE-----------------------------------
# The things you define for your API start here!
#-----------------------------------------------
paths:

  /v1/path/endpoint:

    get:
      tags:
        - API template
        - API v1
      summary: GET operation template
      description: This operation GETs something, and returns it in a paginated format.
      externalDocs:
        description: External documentation links are optional, but an interesting idea.
        url: http://google.com/
      operationId: templateGet
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/skipTokenParam'
        - $ref: '#/parameters/topParam'
      responses:
        '200':
          description: OK. Successfully retrieved the thing you asked for.
          schema:
            $ref: '#/definitions/TemplatePaginatedResponse'
        #
        # The example here overrides the example defined in the TemplatePaginatedResponse object
        #
          examples:
            exampleItem:
              items:
                - id: itemName1
                  type: itemType1
                - id: itemName2
                  type: itemType2
              skipToken: AAAC01
              top: 10
        '400':
          description: Bad Request. Invalid $top or $skipToken value specified in URI.
          schema:
            $ref: '#/definitions/ErrorResponse'
        #######
        # NOTE! It is preferable to describe all the responses, but if there's a good chance
        # we're going to see an unpredictable response, "default" is a catch-all you can use.
        #######
        default:
          description: Error response for anything not described here.
          schema:
            $ref: '#/definitions/ErrorResponse'

    post:
      tags:
        - API template
        - API v1
        - Deprecated
      deprecated: true
      summary: POST operation template
      description: This operation POSTs something.
        **Deprecated as of R68, and will be removed in R76.**
      operationId: templatePost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: bodyParam
          description: The request body
          required: true
          schema:
            $ref: '#/definitions/TemplatePostRequest'
      responses:
        '201':
          description: Created. Thing successfully created.
          schema:
            $ref: '#/definitions/TemplatePaginatedResponse'
        '400':
          description: Bad Request. Something in request body is invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: Service unavailable. Retry after a 60-second wait.
          schema:
            $ref: '#/definitions/ErrorResponse'

  /v1/path/endpoint/{itemId}:

    put:
      tags:
        - API template
      summary: Create an item
      description: Creates a new item with the specified identifier.
      operationId: templatePut
      produces:
        - application/json
      parameters:
        - in: path
          name: itemId
          description: Item identifier
          required: true
          type: string
      responses:
        '201':
          description: Created. Item created.
        '409':
          description: Conflict. An item with the same identifier already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
        - API template
      summary: Delete an item
      description: Deletes the specified item.
      operationId: templateDelete
      parameters:
        - in: path
          name: itemId
          description: ID of the item to delete.
          required: true
          type: string
      responses:
        '204':
          description: No content. Specified item successfully deleted (or did not exist in the first place).


parameters:

  #--NOTE------------------------------------------------------------
  # skipToken is a standard MediaFirst parameter. Do not redefine it.
  #------------------------------------------------------------------
  skipTokenParam:
    name: $skipToken
    in: query
    description: >-
      Used to resume at a specific point when paging through a large result set. This value is returned by the API.

      A consumer should pass back the token it received on the subsequent call (the token is an opaque key that clients should not interpret). Must be used in conjunction with $top to indicate page size. The last page of results does not include a skip token.
    required: false
    type: string

  #--NOTE------------------------------------------------------
  # top is a standard MediaFirst parameter. Do not redefine it.
  #------------------------------------------------------------
  topParam:
    name: $top
    in: query
    description: The maximum number of items to return. Must be greater than zero. If not specified, most APIs default to 100.
    required: false
    type: integer


definitions:

  #--NOTE-------------------------------------------------------------
  # ErrorResponse is a standard MediaFirst object. Do not redefine it.
  #-------------------------------------------------------------------
  ErrorResponse:
    type: object
    description: Contains information about HTTP return and error codes.
    properties:
      code:
        type: string
        example: 404
        description: >-
          Textual error code (such as 'ServiceNotFound') allowing a calling
          system to make a decision about how to handle the error.
      message:
        type: string
        example: Account not found.
        description: >-
          A human-readable description of the error condition. This is not
          localized, and is intended to support API client developers; **not for
          display to an end user.**
    required: [code, message]

  #--NOTE---------------------------------------------------------
  # skipToken is a standard MediaFirst object. Do not redefine it.
  #---------------------------------------------------------------
  skipToken:
    type: string
    example: AAAC04
    description: >-
      An opaque continuation token to be passed back with the next get query to retrieve
      the next set of results. Null if all results have been returned.

  TemplatePaginatedResponse:
    type: object
    description: A paginated response object. Contains a skipToken and an array of objects.
    properties:
      skipToken:
        $ref: '#/definitions/skipToken'
      things:
        type: array
        items:
          $ref: '#/definitions/TemplateSampleObject'
    required: [things]
    example:
      sampleResponse:
        skipToken: foo
        things:
          - id: asdf
            type: asdfType

  TemplatePostRequest:
    type: array
    description: An array of objects.
    items:
      $ref: '#/definitions/TemplateSampleObject'


  TemplateSampleObject:
    type: object
    description: An object with two string properties.
    properties:
      id:
        type: string
        description: Sample object identifier.
      type:
        $ref: '#/definitions/TemplateSampleObjectTypes'
      serverGeneratedId:
        type: string
        description: >-
          Set a property to readOnly to indicate that it should NOT be included in a request body. In this case, this property is also optional (set by the "required" element)
        readOnly: true
    required: [id, type]
    example:
      id: identifier47
      type: type3

  TemplateSampleObjectTypes:
    type: string
    description: An enumeration of object types.
    enum: &enum-objectType
      - type1
      - type2
      - type3
